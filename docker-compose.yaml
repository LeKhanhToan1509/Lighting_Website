services:
  mongodb:
    image: mongo:latest
    container_name: mongodb_lights_store
    ports:
      - "27017:27017"
    volumes:
      - ./data:/data/db
    command: ["mongod", "--replSet", "rs0", "--bind_ip_all"]
    networks:
      - mynetwork
  redis:
    image: redis:latest
    container_name: redis_lights_store
    volumes:
      - ./data:/data
    ports:
      - "6379:6379"
    networks:
      - mynetwork
  miniodb:
    image: quay.io/minio/minio
    container_name: minio_light_store
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: prj_python
      MINIO_ROOT_PASSWORD: 12345678
    volumes:
      - ~/minio/data:/data
    
    command: server --console-address ":9001" /data
    networks:
      - mynetwork

  elastic:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.12.2
    environment:
      - ELASTIC_PASSWORD=txm1509
      - KIBANA_PASSWORD=kibanapass
      - discovery.type=single-node
      - xpack.security.http.ssl.enabled=false
      - cluster.routing.allocation.disk.threshold_enabled=false
      - xpack.security.enabled=false
      - ES_JAVA_OPTS=-Xms4g -Xmx4g
    volumes:
      - ./elk/data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200" 
    networks:
      - mynetwork

  kibana:
    image: docker.elastic.co/kibana/kibana:8.12.2
    environment:
      SERVER_NAME: kibana
      ELASTICSEARCH_HOSTS: '["http://elastic:9200"]'
      ELASTICSEARCH_USERNAME: kibana_system
      ELASTICSEARCH_PASSWORD: kibanapass
    ports:
      - "5601:5601"
    depends_on:
      - elastic
    networks:
      - mynetwork

  monstache:
    image: rwynn/monstache:6.7.5
    container_name: monstache_lights_store
    depends_on:
      - mongodb
      - elastic
      - kibana
    volumes:
      - ./monstache/config.toml:/config.toml
    command: ["-f", "/config.toml"]
    networks:
      - mynetwork



networks:
  mynetwork: